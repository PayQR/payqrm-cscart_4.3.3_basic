<?php
/**
 * Код в этом файле будет выполнен, когда интернет-сайт получит уведомление от PayQR об успешной оплате конкретного заказа.
 * Это означает, что PayQR успешно списал запрошенную интернет-сайтом сумму денежных средств с покупателя и перечислит ее интернет-сайту в ближайшее время, интернет-сайту нужно исполнять свои обязанности перед покупателем, т.е. доставлять товар или оказывать услугу. 
 *
 * $Payqr->objectOrder содержит объект "Счет на оплату" (подробнее об объекте "Счет на оплату" на https://payqr.ru/api/ecommerce#invoice_object)
 *
 * Ниже можно вызвать функции своей учетной системы, чтобы особым образом отреагировать на уведомление от PayQR о событии invoice.paid.
 *
 * Получить orderId из объекта "Счет на оплату", по которому произошло событие, можно через $Payqr->objectOrder->getOrderId();
 *
 * Важно: несмотря на то, что заказ создается на этапе получения уведомления о событии invoice.order.creating, крайне рекомендуется валидировать все содержание заказа и после получения уведомления о событии invoice.paid. А в случае, когда запрос адреса доставки у покупателя на уровне кнопки PayQR, настроен на рекомендательный режим (спрашивать после оплаты/спрашивать необязательно), то не просто рекомендуется, а обязательно, так как объект "Счет на оплату" на этапе invoice.paid будет содержать в себе расширенные окончательные данные, которых не было на invoice.order.creating. Если по результатам проверки данных из invoice.paid обнаружатся какие-то критичные расхождения (например, сумма заказа из объекта "Счет на оплату" не сходится с суммой из соответствующего заказа), можно сразу послать запрос в PayQR на отмену счету после его оплаты (возврат денег).
 */

//валидация заказа и реверт в случае расхождения
$order_info = fn_get_order_info($Payqr->objectOrder->getOrderId()); //сумма заказа из CMS
$payqr_total = $Payqr->objectOrder->data->amount; //общая сумма заказа из объекта PayQR
//если сумма не сходится делаем реверт

if ($payqr_total != $order_info['total'])
{
    $payqr_invoice_obj = new payqr_invoice_action();
    $revert = $payqr_invoice_obj->invoice_revert(fn_get_payqr_invoice($Payqr->objectOrder->getOrderId()), $info->amount);
    if ($revert->id)
    {
        fn_payqr_set_revert($Payqr->objectOrder->getOrderId(), $revert->revertId);
    }
    fn_change_order_status($Payqr->objectOrder->getOrderId(), 'F');
}
else fn_change_order_status($Payqr->objectOrder->getOrderId(), 'P');
